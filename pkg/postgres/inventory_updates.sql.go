// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: inventory_updates.sql

package postgres

import (
	"context"

	"github.com/google/uuid"
)

const UpdateInventoryItemActive = `-- name: UpdateInventoryItemActive :one
UPDATE inventory_items
SET active = $2
WHERE id = $1
RETURNING id, name, description, active, game_id, created_at, updated_at
`

type UpdateInventoryItemActiveParams struct {
	ID     uuid.UUID `json:"id"`
	Active bool      `json:"active"`
}

func (q *Queries) UpdateInventoryItemActive(ctx context.Context, arg UpdateInventoryItemActiveParams) (InventoryItem, error) {
	row := q.db.QueryRow(ctx, UpdateInventoryItemActive, arg.ID, arg.Active)
	var i InventoryItem
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Description,
		&i.Active,
		&i.GameID,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const UpdateInventoryItemDescription = `-- name: UpdateInventoryItemDescription :one
UPDATE inventory_items
SET description = $2
WHERE id = $1
RETURNING id, name, description, active, game_id, created_at, updated_at
`

type UpdateInventoryItemDescriptionParams struct {
	ID          uuid.UUID `json:"id"`
	Description string    `json:"description"`
}

func (q *Queries) UpdateInventoryItemDescription(ctx context.Context, arg UpdateInventoryItemDescriptionParams) (InventoryItem, error) {
	row := q.db.QueryRow(ctx, UpdateInventoryItemDescription, arg.ID, arg.Description)
	var i InventoryItem
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Description,
		&i.Active,
		&i.GameID,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
