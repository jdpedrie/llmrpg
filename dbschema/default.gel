using extension ai;

module default {
    type Character {
        required name: str;
        description: str;
        context: array<str>;

        required active: bool {
            default := false;
        };
        required main_character: bool {
            default := false;
        };

        multi skills: CharacterAttribute {
            on source delete delete target;
        };
        multi characteristics: CharacterAttribute {
            on source delete delete target;
        };
        multi relationship: CharacterAttribute {
            on source delete delete target;
        };
    };

    type Game {
        required name: str;
        description: str;
        multi characters: Character {
            on source delete delete target;
        };
        starting_message: str;
        scenario: str;
        objectives: str;

        playthrough_start_time: datetime;
        playthrough_end_time: datetime;
        last_activity_time: datetime {
            rewrite update using (datetime_of_statement())
        };
        required create_time: datetime {
            rewrite insert using (datetime_of_statement())
        };

        required is_template: bool {
            default := false;
        };
        required is_running: bool {
            default := false;
        };

        # the names of character skill attributes for the game.
        skills: array<str>;
        # the names of character characteristic attributes for the game.
        characteristics: array<str>;
        # the names of character relationship attributes for the game.
        relationship: array<str>;

        constraint expression on (
            not __subject__.is_running OR (
                not __subject__.is_template AND (
                    __subject__.description != "" AND
                    __subject__.starting_message != "" AND
                    __subject__.scenario != "" AND
                    __subject__.objectives != "" AND
                    exists __subject__.skills AND
                    exists __subject__.characteristics AND
                    exists __subject__.relationship
                )
            )
        ) {
            errmessage := "game is a template or data not fully satisfied; cannot set is_running to true";
        };
    };

    type History {
        required text: str;
        required choice: str;
        required outcome: str;
        required create_time: datetime {
            rewrite insert using (datetime_of_statement())
        };

        required game: Game;

        deferred index ext::ai::index(embedding_model := 'text-embedding-3-small') on (
            .text ++ ' ' ++ .choice
        );
    };

    type CharacterAttribute {
        required name: str;
        required value: int16 {
            constraint max_value(10);
            constraint min_value(-10);
        };
    };
}
